{"version":3,"sources":["0","main.js"],"names":["module","exports","PLAY_PERCENT","WIN_PERCENT","POWER","NAME","defaultKeyNames","getParameterByName","name","url","window","location","href","replace","regex","results","RegExp","exec","decodeURIComponent","roundToDecimal","string","decimals","parseFloat","toFixed","data","JSON","parse","table","document","getElementById","champ","row","insertRow","insertCell","innerHTML"],"mappings":";AAAAA,OAAOC,SAAYC,aAAc,cAAeC,YAAa,aAAcC,MAAO,QAASC,KAAM;;AC+BhG,aA/BD,IAAA,EAAA,QAAA,8BAAYC,EAAAA,EAAAA,GA+BX,SAAA,EAAA,GAAA,GAAA,GAAA,EAAA,WAAA,OAAA,EAAA,IAAA,KAAA,GAAA,MAAA,EAAA,IAAA,IAAA,KAAA,EAAA,OAAA,UAAA,eAAA,KAAA,EAAA,KAAA,EAAA,GAAA,EAAA,IAAA,OAAA,EAAA,QAAA,EAAA,EA7BD,IAAMC,EAAqB,SAACC,EAAMC,GAC3BA,IAAKA,EAAMC,OAAOC,SAASC,MACzBJ,EAAAA,EAAKK,QAAQ,UAAW,QACzBC,IACJC,EADY,IAAIC,OAAO,OAASR,EAAO,qBACvBS,KAAKR,GACnB,OAACM,EACAA,EAAQ,GACNG,mBAAmBH,EAAQ,GAAGF,QAAQ,MAAO,MAD5B,GADH,MAMvB,SAASM,EAAeC,EAAQC,GACvBC,OAAAA,WAAWA,WAAWF,GAAQG,QAAQF,IAG/C,IAAMG,EAAOC,KAAKC,MAAMnB,EAAmB,SACrCoB,EAAQC,SAASC,eAAe,UAarC,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAXiBL,IAAAA,IAAM,EAANA,EAAAA,EAAM,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,MAAA,GAAA,EAAA,CAAfM,IAAAA,EAAe,EAAA,MAChBC,EAAMJ,EAAMK,WAAW,GACzBC,EAAAA,YAAY,GAAGC,UAAYJ,EAAMxB,EAAgBD,MACjD4B,EAAAA,YAAY,GAAGC,UACjBf,EAAeW,EAAMxB,EAAgBH,aAAc,GAAK,IACtD8B,EAAAA,YAAY,GAAGC,UACjBf,EAAeW,EAAMxB,EAAgBJ,cAAe,GAAK,IACvD+B,EAAAA,YAAY,GAAGC,UAAYf,EAC7BW,EAAMxB,EAAgBF,OACtB,IAEH,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,KAAA,GAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA","file":"main.5e0757cf.map","sourceRoot":"../src","sourcesContent":[null,"import * as defaultKeyNames from '../../defaultKeyNames.json';\r\n\r\nconst getParameterByName = (name, url) => {\r\n  if (!url) url = window.location.href;\r\n  name = name.replace(/[\\[\\]]/g, '\\\\$&');\r\n  const regex = new RegExp('[?&]' + name + '(=([^&#]*)|&|#|$)'),\r\n    results = regex.exec(url);\r\n  if (!results) return null;\r\n  if (!results[2]) return '';\r\n  return decodeURIComponent(results[2].replace(/\\+/g, ' '));\r\n};\r\n\r\n// maybe import from common.js someday\r\nfunction roundToDecimal(string, decimals) {\r\n  return parseFloat(parseFloat(string).toFixed(decimals));\r\n}\r\n\r\nconst data = JSON.parse(getParameterByName('data'));\r\nconst table = document.getElementById('champs');\r\n\r\nfor (let champ of data) {\r\n  const row = table.insertRow(-1);\r\n  row.insertCell(-1).innerHTML = champ[defaultKeyNames.NAME];\r\n  row.insertCell(-1).innerHTML =\r\n    roundToDecimal(champ[defaultKeyNames.WIN_PERCENT], 2) + '%';\r\n  row.insertCell(-1).innerHTML =\r\n    roundToDecimal(champ[defaultKeyNames.PLAY_PERCENT], 2) + '%';\r\n  row.insertCell(-1).innerHTML = roundToDecimal(\r\n    champ[defaultKeyNames.POWER],\r\n    2,\r\n  );\r\n}\r\n"]}